name: Main Workflow
run-name: Running main workflow
on:
  push:
    paths-ignore: 
      docs/**
  pull_request:
    paths-ignore: 
      docs/**
  workflow_dispatch:
    inputs:
      run_lint:
        description: 'Whether to run lint job or not'
        required: true
        type: boolean
        default: false
      run_type_check:
        description: 'Whether to run type check or not'
        required: true
        type: boolean
        default: false
jobs:
    cache-and-install:
        runs-on: ubuntu-latest
    
        steps:
          - name: Checkout
            uses: actions/checkout@v4
    
          - name: Install Node.js
            uses: actions/setup-node@v4
            with:
              node-version: 20
    
          - uses: pnpm/action-setup@v3
            name: Install pnpm
            with:
              version: 8
              run_install: false
    
          - name: Get pnpm store directory
            shell: bash
            run: |
              echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
    
          - uses: actions/cache@v4
            name: Setup pnpm cache
            with:
              path: ${{ env.STORE_PATH }}
              key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
              restore-keys: |
                ${{ runner.os }}-pnpm-store-
    
          - name: Install dependencies
            run: pnpm install
    build:
        runs-on: ubuntu-latest
        needs: cache-and-install
        steps:
            - uses: actions/checkout@v4
              
            - name: Install pnpm and restore cache
              uses: ./restore-and-install
            
            - name: Build
              run: pnpm run build
            
            - name: Create artifact
              if: github.ref_name == 'main'
              uses: actions/upload-artifact@v4
              with:
                name: vue2048-release
                retention-days: 7
                path: |
                    dist/
    deploy-qa:
      runs-on: ubuntu-latest
      needs: cache-and-install
      environment: deploy-QA
      if: github.event_name == 'workflow_dispatch'
      steps:
            - uses: actions/checkout@v4
              
            - name: Install pnpm and restore cache
              uses: ./restore-and-install
            
            - name: Build
              run: pnpm run build

            - name: Deploy
              uses: ./deploy-action
              with:
                token: ${{ secrets.SWA_CLI_DEPLOYMENT_TOKEN }}
                project_name: ${{ vars.SWA_CLI_PROJECT_NAME }}
    deploy-prod:
      needs: cache-and-install
      runs-on: ubuntu-latest
      environment: deploy-prod
      if: github.event_name == 'workflow_dispatch' && github.ref_name == 'main'
      steps:
            - uses: actions/checkout@v4
              
            - name: Install pnpm and restore cache
              uses: ./restore-and-install
            
            - name: Build
              run: pnpm run build

            - name: Deploy
              uses: ./deploy-action
              with:
                token: ${{ secrets.SWA_CLI_DEPLOYMENT_TOKEN }}
                project_name: ${{ vars.SWA_CLI_PROJECT_NAME }}
    lint:
        runs-on: ubuntu-latest
        needs: cache-and-install
        if: github.event_name == 'pull_request' || github.event.inputs.run_lint == 'true'
        steps:
            - uses: actions/checkout@v4
              
            - name: Install pnpm and restore cache
              uses: ./restore-and-install

            - name: Lint
              run: pnpm run lint
    type-check:
        runs-on: ubuntu-latest
        needs: cache-and-install
        if: github.event_name == 'pull_request' || github.event.inputs.run_type_check == 'true'
        steps:
            - uses: actions/checkout@v4
                
            - name: Install pnpm and restore cache
              uses: ./restore-and-install

            - name: Type check
              run: pnpm run type-check
